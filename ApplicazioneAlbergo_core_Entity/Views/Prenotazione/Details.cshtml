@model ApplicazioneAlbergo_core_Entity.Models.Prenotazione

@{
	ViewData["Title"] = "Details";
	
}

<h1>Details</h1>

<div>
	<h4>Prenotazione</h4>
	<hr />
	<dl class="row">
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.DataInizioPrenotazione)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.DataInizioPrenotazione)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.DataFinePrenotazione)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.DataFinePrenotazione)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Acconto)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Acconto)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Cliente)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Cliente.Nome)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Camera)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Camera.TipoCamera)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Servizio)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Servizio.DescrizioneServizio)
		</dd>
		<dt class="col-sm-2">
			@Html.DisplayNameFor(model => model.Pensione)
		</dt>
		<dd class="col-sm-10">
			@Html.DisplayFor(model => model.Pensione.TipoPensione)
		</dd>
	</dl>
</div>
<div class="row gap-3">
	<div class="col-12">

	<a asp-action="Index">Back to List</a>
	</div>
	<div class="col-4">
		<button id="bottoneCostoSoggiorno" type="button" class="btn btn-info text-light"> Costo totale Soggiorno </button>
	</div>
	<div class="col-12">
		<p id="risultatoFetch"></p>

	</div>
</div>


<div class="container">
	<div class="row">
		<div class="col-6">
			<div></div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		let nomeCliente = `@Model.Cliente.Nome`;


		const Myfetch = (idprenotazione) => {

			const options = {
				method: "GET",
				headers: {
					"Content-Type": "application/json",
					/*  Authorization: `Bearer ${TokenCommenti} `, */
				},
			};

			fetch(`/Prenotazione/CostoTotSoggiorno/?idPrenotazione=${idprenotazione}`, options)
				.then((response) => {
					if (!response.ok) {
						if (response.status > 400 && response.status < 500) {
							if (response.status === 429) {
								throw new Error("429 INFAME PER TE TANTE COSE BRUTTE");
							} else {
								throw new Error("STAI CAPPELLANDO , RIGUARDA QUELLO CHE HAI SCRITTO");
							}
						}
						if (response.status > 500 && response.status < 600) {
							throw new Error("SERVER SPOMPATO, NON FUNZIA??");
						}
					}
					return response.json();
				})
				.then((data) => {

					
					const risultatoFetch = document.getElementById("risultatoFetch");
					risultatoFetch.innerHTML = `Il costo totale del soggiorno per il Sig. ${nomeCliente} è di ${data} euro`;

				})
		}

		window.addEventListener("DOMContentLoaded", () => {

			const bottoneCostoSoggiorno = document.getElementById("bottoneCostoSoggiorno");
			bottoneCostoSoggiorno.addEventListener("click", () => {
				Myfetch(@Model.IdPrenotazione)
			})
		})

	</script>
}

