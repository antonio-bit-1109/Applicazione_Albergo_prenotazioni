// <auto-generated />
using System;
using ApplicazioneAlbergo_core_Entity.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicazioneAlbergo_core_Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Camera", b =>
                {
                    b.Property<int>("IdCamera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCamera"));

                    b.Property<int>("NumeroCamera")
                        .HasColumnType("int");

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<string>("TipoCamera")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCamera");

                    b.ToTable("Camere");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Cellulare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Dipendente", b =>
                {
                    b.Property<int>("IdDipendente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDipendente"));

                    b.Property<string>("NomeUtente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDipendente");

                    b.ToTable("Dipendenti");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Pensione", b =>
                {
                    b.Property<int>("IdPensione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPensione"));

                    b.Property<double>("Prezzo")
                        .HasColumnType("float");

                    b.Property<string>("TipoPensione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPensione");

                    b.ToTable("Pensioni");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Prenotazione", b =>
                {
                    b.Property<int>("IdPrenotazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrenotazione"));

                    b.Property<int>("Acconto")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinePrenotazione")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioPrenotazione")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCamera")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPensione")
                        .HasColumnType("int");

                    b.Property<int>("IdServizio")
                        .HasColumnType("int");

                    b.HasKey("IdPrenotazione");

                    b.HasIndex("IdCamera");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPensione");

                    b.HasIndex("IdServizio");

                    b.ToTable("Prenotazioni");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Servizio", b =>
                {
                    b.Property<int>("IdServizio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServizio"));

                    b.Property<double>("CostoServizio")
                        .HasColumnType("float");

                    b.Property<string>("DescrizioneServizio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServizio");

                    b.ToTable("Servizi");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Prenotazione", b =>
                {
                    b.HasOne("ApplicazioneAlbergo_core_Entity.Models.Camera", "Camera")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdCamera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicazioneAlbergo_core_Entity.Models.Cliente", "Cliente")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicazioneAlbergo_core_Entity.Models.Pensione", "Pensione")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdPensione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicazioneAlbergo_core_Entity.Models.Servizio", "Servizio")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdServizio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("Cliente");

                    b.Navigation("Pensione");

                    b.Navigation("Servizio");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Camera", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Cliente", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Pensione", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("ApplicazioneAlbergo_core_Entity.Models.Servizio", b =>
                {
                    b.Navigation("Prenotazioni");
                });
#pragma warning restore 612, 618
        }
    }
}
